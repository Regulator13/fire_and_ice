<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Created in obj_control, with new seed</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// initiate tutorial

// messages - tutorial messages
messages = ds_list_create();
// showTime - time each message shows
showTime = 30*8;
// currentMessage - current message to show
currentMessage = 0;

// start tutorial
alarm[0] = showTime;

// set up message
var control = global.Menu.localControls[| 0];

// add message in order
ds_list_add(messages, "Welcome to Dust: Fire and Ice Tutorial!#Developed by: Gabriel Frey");
ds_list_add(messages, "The object of the game is to get to the PURPLE DOOR at the top,#before the water gets to you.");
var left = scr_getInputName(global.controls[control, LEFT_KEY], LEFT_KEY, global.controls[control, KEY_TYPE]);
var right = scr_getInputName(global.controls[control, RIGHT_KEY], RIGHT_KEY, global.controls[control, KEY_TYPE]);
var jump = scr_getInputName(global.controls[control, ACTION_KEY], ACTION_KEY, global.controls[control, KEY_TYPE]);
ds_list_add(messages, "Press " + left + " and " + right + " to move, and press " + jump + " to jump.#You can double jump.");
var ice = scr_getInputName(global.controls[control, LEFTSELC_KEY], LEFTSELC_KEY, global.controls[control, KEY_TYPE]);
var fire = scr_getInputName(global.controls[control, RIGHTSELC_KEY], RIGHTSELC_KEY, global.controls[control, KEY_TYPE]);
var aim;
switch (global.controls[control, KEY_TYPE]) {
    case CONTROLS_MOUSE:
        aim = "the mouse";
        break
    case CONTROLS_KEYBOARD:
        var up = scr_getInputName(global.controls[control, UP_KEY], UP_KEY, global.controls[control, KEY_TYPE]);
        var down = scr_getInputName(global.controls[control, DOWN_KEY], DOWN_KEY, global.controls[control, KEY_TYPE]);
        aim = up + " and " + down;
    }
ds_list_add(messages, "Press " + ice + " to grab blocks when close enough, or shoot a ball of ice.#Press " + ice + " again to throw.");
ds_list_add(messages, "Press " + fire + " to create a fire ball.#Use " + aim + " to aim.");
ds_list_add(messages, "You can freeze blocks in mid air, or hold " + ice + " while#holding a block to begin a freezing countdown.");
ds_list_add(messages, "If you press " + fire + " while holding a block, it will#begin an explosion countdown timer, that can be used to#destroy big blocks.");
ds_list_add(messages, "Collect hearts to get more lives, and stand in the blue recharge stations# to get energy. Shooting an ice or fire ball uses energy.");
ds_list_add(messages, "Good luck!");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// next step

// next message
currentMessage++;

// if last message, stop
if (currentMessage &gt;= ds_list_size(messages))
    instance_destroy();

// reset timer
alarm[0] = showTime;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw messages

// set up
draw_set_alpha(1);

// draw rectangle
var cx = room_width/2
var b = 32;
var bh = 90;

draw_set_color(c_dkgray);
draw_rectangle(b, b, cx*2-b, bh+b, false);
draw_set_color(c_gray);
draw_rectangle(b, b, cx*2-b, bh+b, true);

// set up
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fnt_buttons);
draw_set_color(c_white);

// draw message
draw_text(cx, b+bh/2, messages[| currentMessage]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
