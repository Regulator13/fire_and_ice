<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_inputButton</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///input

// set in creation:
// control - the control index to update
control = 0;
// controller - the controller type
controller = CONTROLS_KEYBOARD;
// player - player controls being changed
player = 0;
// Source - button who created this, used for title chaning
Source = noone;

// reset input
io_clear();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// clear all input
io_clear();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///input

switch(controller) {
    case CONTROLS_KEYBOARD:
        // check for keyboard input
        if (keyboard_key) {
            scr_changeControl(keyboard_key, control, controller, player, Source);
            instance_destroy();
            }
        break;
    case CONTROLS_MOUSE:
        if (control &lt; LEFTSELC_KEY) {
            // check for keyboard input
            if (keyboard_key) {
                scr_changeControl(keyboard_key, control, controller, player, Source);
                instance_destroy();
                }
            }
        else {
            // check for mouse input
            if (device_mouse_check_button(0, mb_left)) {
                scr_changeControl(mb_left, control, controller, player, Source);
                instance_destroy();
                }
            else if (device_mouse_check_button(0, mb_right)) {
                scr_changeControl(mb_right, control, controller, player, Source);
                instance_destroy();
                }
            else if (device_mouse_check_button(0, mb_middle)) {
                scr_changeControl(mb_middle, control, controller, player, Source);
                instance_destroy();
                }
            }
        break;
    }
        
// escape
if (keyboard_check(vk_escape)) {
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw input

//setup drawing
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fnt_command)
draw_set_font(fnt_buttons);;

// prompt
var prompt;
switch (controller) {
    case CONTROLS_KEYBOARD:
        prompt = "Enter Keyboard Input";
        break;
    case CONTROLS_MOUSE:
        if (control &lt; LEFTSELC_KEY)
            prompt = "Enter Keyboard Input";
        else
            prompt = "Enter Mouse Input";
        break;
    default:
        prompt = "Enter Joystick Input";
        break;
    }
var pw = string_width(prompt)/2+8;
var ph = 16;

draw_set_color(c_dkgray);
draw_rectangle(x-pw, y-ph, x+pw, y+ph, false);
draw_set_color(c_gray);
draw_rectangle(x-pw, y-ph, x+pw, y+ph, true);
draw_set_color(c_white);
draw_text(x, y, prompt);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
